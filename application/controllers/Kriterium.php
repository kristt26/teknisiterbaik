<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Kriterium extends CI_Controller
{
    public function __construct()
    {
        parent::__construct();
        $this->load->model('Kriterium_model');
        $this->load->model('Bobotkriterium_model');
        $this->load->library('ahp');

    }

    /*
     * Listing of kriteria
     */
    public function index()
    {
        $data['kriteria'] = $this->Kriterium_model->get_all_kriteria();
        $data['data'] = ['title' => 'Bobot Kriteria', 'header' => 'Pembobotan'];
        $data['_view'] = 'kriterium/index';
        $this->load->view('layouts/main', $data);
    }

    /*
     * Adding a new kriterium
     */
    public function add()
    {
        $params = json_decode($this->security->xss_clean($this->input->raw_input_stream), true);
        $result = $this->Kriterium_model->add_kriterium($params);
        echo json_encode(['message' => $result]);
    }

    /*
     * Editing a kriterium
     */
    public function edit($idkriteria)
    {
        // check if the kriterium exists before trying to edit it
        $data['kriterium'] = $this->Kriterium_model->get_kriterium($idkriteria);

        if (isset($data['kriterium']['idkriteria'])) {
            if (isset($_POST) && count($_POST) > 0) {
                $params = array(
                    'kriteria' => $this->input->post('kriteria'),
                );

                $this->Kriterium_model->update_kriterium($idkriteria, $params);
                redirect('kriterium/index');
            } else {
                $data['_view'] = 'kriterium/edit';
                $this->load->view('layouts/main', $data);
            }
        } else {
            show_error('The kriterium you are trying to edit does not exist.');
        }

    }

    /*
     * Deleting kriterium
     */
    public function remove($idkriteria)
    {
        $kriterium = $this->Kriterium_model->get_kriterium($idkriteria);

        // check if the kriterium exists before trying to delete it
        if (isset($kriterium['idkriteria'])) {
            $this->Kriterium_model->delete_kriterium($idkriteria);
            redirect('kriterium/index');
        } else {
            show_error('The kriterium you are trying to delete does not exist.');
        }

    }

    public function bobot()
    {
        $data['data'] = ['title' => 'Bobot Kriteria', 'header' => 'Pembobotan'];
        $data['_view'] = 'kriterium/pembobotan';
        $this->load->view('layouts/main', $data);
    }

    public function checkcr()
    {
        $params = json_decode($this->security->xss_clean($this->input->raw_input_stream), true);
        // $params = $this->Bobotkriterium_model->get_all_bobotkriteria();
        $data = $this->Kriterium_model->get_all_kriteria()['kriteria'];
        $criterias = [];
        $ar = [];
        for ($i = 0; $i < count($data); $i++) {
            array_push($criterias, $data[$i]['kriteria']);
        }
        $b = 0;
        for ($i = 0; $i < count($data); $i++) {
            $item = [];

            for ($j = 0; $j < count($data); $j++) {
                if ($i == $j) {
                    array_push($item, 1);
                } else if ($i < $j) {
                    array_push($item, $params[$b]['nilai']);
                    $b += 1;
                } else {
                    array_push($item, null);
                }
            }
            array_push($ar, $item);
        }

        foreach ($criterias as $key => $value) {
            $this->ahp->addQualitativeCriteria($value);
        }
        $ahp = json_encode($this->ahp->setRelativeInterestMatrix($ar));
        echo $ahp;

        // $candidates = ['TF','KS','NH','AT'];

        // $ahp->setCandidates($candidates);

        // $pairWise = [
        //     'Orientasi Pelayanan'=>
        //     [
        //         [1,null,null,null],
        //         [5,1,3,6],
        //         [4,null,1,4],
        //         [2,null,null,1],
        //     ],
        //     'Integritas'=>
        //     [
        //         [1,null,null,5],
        //         [5,1,2,7],
        //         [2,null,1,5],
        //         [null,null,null,1]
        //     ],
        //     'Tanggung Jawab'=>
        //     [
        //         [1,null,null,null,],
        //         [5,1,2,3],
        //         [5,null,1,3],
        //         [2,null,null,1]
        //     ],
        //     'Komitmen'=>[
        //         [1,null,null,null,],
        //         [5,1,3,6],
        //         [4,null,1,4],
        //         [2,null,null,1]
        //     ],
        //     'Kepemimpinan'=>[
        //         [1,null,null,null,],
        //         [5,1,2,6],
        //         [4,null,1,5],
        //         [2,null,null,1]
        //     ],
        //     'Kerjasama'=>[
        //         [1,3,null,2],
        //         [null,1,null,null],
        //         [4,5,1,3],
        //         [null,3,null,1]
        //     ],
        //     'Prestasi Kerja'=>[
        //         [1,null,null,3],
        //         [5,1,2,5],
        //         [3,null,1,3],
        //         [null,null,null,1]
        //     ],
        //     'Wawasan'=>[
        //         [1,2,5,5],
        //         [null,1,3,3],
        //         [null,null,1,2],
        //         [null,null,null,1]
        //     ],
        //     'Komunikatif'=>[
        //         [1,null,2,5],
        //         [3,1,3,5],
        //         [null,null,1,4],
        //         [null,null,null,1]
        //     ]
        // ];
        // $ahp->setBatchCriteriaPairWise($pairWise);
        // $ahp->finalize();

        // print_r($ahp->getResult());

        // $ahp->debug();
    }

    public function getkriteria()
    {
        $data = $this->Kriterium_model->get_all_kriteria();
        echo json_encode($data);
    }

}
