<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Bobotkriterium extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Bobotkriterium_model');
    } 

    /*
     * Listing of bobotkriteria
     */
    function index()
    {
        $data['bobotkriteria'] = $this->Bobotkriterium_model->get_all_bobotkriteria();
        
        $data['_view'] = 'bobotkriterium/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new bobotkriterium
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'idkriteria' => $this->input->post('idkriteria'),
				'idkriteria1' => $this->input->post('idkriteria1'),
				'bobot' => $this->input->post('bobot'),
            );
            
            $bobotkriterium_id = $this->Bobotkriterium_model->add_bobotkriterium($params);
            redirect('bobotkriterium/index');
        }
        else
        {            
            $data['_view'] = 'bobotkriterium/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a bobotkriterium
     */
    function edit($idbobotkriteria)
    {   
        // check if the bobotkriterium exists before trying to edit it
        $data['bobotkriterium'] = $this->Bobotkriterium_model->get_bobotkriterium($idbobotkriteria);
        
        if(isset($data['bobotkriterium']['idbobotkriteria']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'idkriteria' => $this->input->post('idkriteria'),
					'idkriteria1' => $this->input->post('idkriteria1'),
					'bobot' => $this->input->post('bobot'),
                );

                $this->Bobotkriterium_model->update_bobotkriterium($idbobotkriteria,$params);            
                redirect('bobotkriterium/index');
            }
            else
            {
                $data['_view'] = 'bobotkriterium/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The bobotkriterium you are trying to edit does not exist.');
    } 

    /*
     * Deleting bobotkriterium
     */
    function remove($idbobotkriteria)
    {
        $bobotkriterium = $this->Bobotkriterium_model->get_bobotkriterium($idbobotkriteria);

        // check if the bobotkriterium exists before trying to delete it
        if(isset($bobotkriterium['idbobotkriteria']))
        {
            $this->Bobotkriterium_model->delete_bobotkriterium($idbobotkriteria);
            redirect('bobotkriterium/index');
        }
        else
            show_error('The bobotkriterium you are trying to delete does not exist.');
    }
    
}
