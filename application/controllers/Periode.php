<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class Periode extends CI_Controller
{
    public function __construct()
    {
        parent::__construct();
        $this->load->model('Periode_model');
    }

    /*
     * Listing of periode
     */
    public function index()
    {
        $data['periode'] = $this->Periode_model->get_all_periode();
        $data['data'] = ['title' => 'Periode', 'header' => 'Periode'];
        $data['_view'] = 'periode/index';
        $this->load->view('layouts/main', $data);
    }

    function getperiodeaktif(Type $var = null)
    {
        $data = $this->Periode_model->get_periodeaktif();
        echo json_encode($data);
    }

    function getdata()
    {
        $data = $this->Periode_model->get_all_periode();
        echo json_encode($data);
    }

    /*
     * Adding a new periode
     */
    public function add()
    {
        if (isset($_POST) && count($_POST) > 0) {
            $params = array(
                'periode' => $this->input->post('periode'),
                'status' => 'true',
            );
            $periode_id = $this->Periode_model->add_periode($params);
            redirect('periode/index');
        } else {
            $data['_view'] = 'periode/add';
            $data['data'] = ['title' => 'Periode', 'header' => 'Periode'];
            $this->load->view('layouts/main', $data);
        }
    }

    /*
     * Editing a periode
     */
    public function edit($idperiode)
    {
        // check if the periode exists before trying to edit it
        $data['periode'] = $this->Periode_model->get_periode($idperiode);

        if (isset($data['periode']['idperiode'])) {
            if (isset($_POST) && count($_POST) > 0) {
                $params = array(
                    'periode' => $this->input->post('periode'),
                );

                $this->Periode_model->update_periode($idperiode, $params);
                redirect('periode/index');
            } else {
                $data['_view'] = 'periode/edit';
                $this->load->view('layouts/main', $data);
            }
        } else {
            show_error('The periode you are trying to edit does not exist.');
        }

    }

    /*
     * Deleting periode
     */
    public function remove($idperiode)
    {
        $periode = $this->Periode_model->get_periode($idperiode);

        // check if the periode exists before trying to delete it
        if (isset($periode['idperiode'])) {
            $this->Periode_model->delete_periode($idperiode);
            redirect('periode/index');
        } else {
            show_error('The periode you are trying to delete does not exist.');
        }

    }

}
